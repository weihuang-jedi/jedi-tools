#!/bin/bash
#SBATCH -N NUMNODE
#SBATCH --ntasks-per-node=TASKS_PER_NODE
#SBATCH --cpus-per-task=OMPTHREADSNUMBER
#SBATCH -n MPITASKS
#SBATCH -t 04:10:00
#SBATCH -A gsienkf
#SBATCH --partition=QUEUENAME
#SBATCH --exclusive
#SBATCH -J JOBNAME

 set -x

 ulimit -s unlimited

 module use /work/noaa/gsienkf/weihuang/JEDI_OPT/modulefiles
 module purge
 module load cmake/3.18.1 python/3.7.5
 module load gcc/8.3.0 openmpi/4.0.4
 module load gnu8.3.0_openmpi4.0.4
 module load mkl/2020.2
#module load vtune/2020.2

 export LD_LIBRARY_PATH=/work/noaa/gsienkf/weihuang/jedi/src/omp/lib:$LD_LIBRARY_PATH
 executable=/work/noaa/gsienkf/weihuang/jedi/src/omp/bin/fv3jedi_letkf.x

 cd WORKDIR

 rm -f core.*
 rm -rf r*hs

 npes=MPITASKS
 mems=NUMBER_MEMBER
 nodes=NUMNODE
 method=METHOD

 n=1
 while [ $n -le ${mems} ]
 do
   if [ $n -lt 10 ]
   then
     member_str=00${n}
   elif [ $n -lt 100 ]
   then
     member_str=0${n}
   else
     member_str=${n}
   fi

   mkdir -p output/mem${member_str}

   n=$(( $n + 1 ))
 done

#totalCoresPerNode=$(( TASKS_PER_NODE * OMPTHREADSNUMBER ))
 totalCoresPerNode=$(( TASKS_PER_NODE * $SLURM_CPUS_PER_TASK ))
#export OMP_NUM_THREADS=OMPTHREADSNUMBER
 export OMP_NUM_THREADS=$SLURM_CPUS_PER_TASK
#export OMP_PROC_BIND=true
#export OMP_PLACES={0}:${totalCoresPerNode}:OMPTHREADSNUMBER
#export OMP_PLACES={0}:${totalCoresPerNode}:$SLURM_CPUS_PER_TASK

 export KMP_AFFINITY=compact
 export MKL_DYNAMIC=FALSE
 export MKL_NUM_THREADS=$OMP_NUM_THREADS
 export I_MPI_PIN_DOMAIN="core"

 echo "Nodelist: $SLURM_JOB_NODELIST"
 echo "CoerPerTask: $SLURM_CPUS_PER_TASK"

#other_opts="--cpu-bind=core"
#other_opts="--cpu-bind=core"
#other_opts="--cpu-bind=core numactl -m 1"
#other_opts="--map-by node:PE=$SLURM_CPUS_PER_TASK --report-bindings"

#if [ "${method}" = "obs" ]
#then
   vtune_options=" "
#else
#  vtune_options="vtune -collect hotspots --"
#fi

 time srun -n ${npes} -N ${nodes} \
        ${vtune_options} \
        ${executable} \
        ${method}.getkf_gfs_np${npes}_nens${mems}.yaml \
        > log.${method}.np${npes}_nens${mems}

 n=1
 while [ $n -le ${mems} ]
 do
   if [ $n -lt 10 ]
   then
     member_str=00${n}
   elif [ $n -lt 100 ]
   then
     member_str=0${n}
   else
     member_str=${n}
   fi

   rm -rf output/mem${member_str}

   n=$(( $n + 1 ))
 done

 n=1
 while [ $n -lt ${npes} ]
 do
   rm -f stdoutNerr/std.*${n}

   n=$(( $n + 1 ))
 done

#sleep 5
#sacct --format="JobID,Elapsed,AveVMSize" | grep $SLURM_JOB_ID
 sacct --format=JobID,CPUTime,Elapsed,AveVMSize,MaxRSS,NodeList%30 --units=M -j $SLURM_JOBID

 exit 0

 n=1
 while [ $n -le ${mems} ]
 do
   if [ $n -lt 10 ]
   then
     member_str=00${n}
   elif [ $n -lt 100 ]
   then
     member_str=0${n}
   else
     member_str=${n}
   fi

   rm -rf output/mem${member_str}

   n=$(( $n + 1 ))
 done

 n=1
 while [ $n -lt ${npes} ]
 do
   rm -f stdoutNerr/std.*${n}

   n=$(( $n + 1 ))
 done

